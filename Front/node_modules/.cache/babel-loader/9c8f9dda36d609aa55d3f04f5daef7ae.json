{"ast":null,"code":"import _defineProperty from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/emine.turcan/Projekt/MaCha/Front/src/components/ProjectTask/AddPT.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPT } from '../../actions/projectTaskActions';\nimport classnames from 'classnames';\n\nvar AddPT =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddPT, _Component);\n\n  function AddPT() {\n    var _this;\n\n    _classCallCheck(this, AddPT);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddPT).call(this));\n    _this.state = {\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); //after onChange should get the onSubmit content in const below\n\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddPT, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value)); //e for event, so a array of targets\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newProjectTask = {\n        summary: this.state.summary,\n        acceptanceCriteria: this.state.acceptanceCriteria,\n        status: this.state.status\n      };\n      this.props.addPT(newProjectTask, this.props.history);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(\"div\", {\n        className: \"addPT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Back to Board\"), React.createElement(\"h4\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Add /Update Project Task\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: classnames('form-control form-control-lg', {\n          // makes the box red\n          'is-invalid': errors.summary\n        }),\n        name: \"summary\" //should be the same like in server\n        ,\n        value: this.state.summary,\n        placeholder: \"Project Task summary\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), errors.summary && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, errors.summary)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control form-control-lg\",\n        placeholder: \"Acceptance Criteria\",\n        name: \"acceptanceCriteria\",\n        value: this.state.acceptanceCriteria,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control form-control-lg\",\n        name: \"status\",\n        value: this.state.status,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Select Status\"), React.createElement(\"option\", {\n        value: \"TO_DO\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"TO DO\"), React.createElement(\"option\", {\n        value: \"IN_PROGRESS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"IN PROGRESS\"), React.createElement(\"option\", {\n        value: \"DONE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"DONE\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return AddPT;\n}(Component);\n\nAddPT.propTypes = {\n  addPT: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPT: addPT\n})(AddPT);","map":{"version":3,"sources":["/Users/emine.turcan/Projekt/MaCha/Front/src/components/ProjectTask/AddPT.js"],"names":["React","Component","Link","PropTypes","connect","addPT","classnames","AddPT","state","summary","acceptanceCriteria","status","errors","onChange","bind","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProjectTask","props","history","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPT } from '../../actions/projectTaskActions';\nimport classnames from 'classnames';\n\nclass AddPT extends Component {\n  constructor() {\n    super();\n    this.state = {\n      summary: '',\n      acceptanceCriteria: '',\n      status: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    //after onChange should get the onSubmit content in const below\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value }); //e for event, so a array of targets\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status\n    };\n\n    this.props.addPT(newProjectTask, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"addPT\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to=\"/\" className=\"btn btn-light\">\n                Back to Board\n              </Link>\n              <h4 className=\"display-4 text-center\">\n                Add /Update Project Task\n              </h4>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames('form-control form-control-lg', {\n                      // makes the box red\n                      'is-invalid': errors.summary\n                    })}\n                    name=\"summary\" //should be the same like in server\n                    value={this.state.summary}\n                    placeholder=\"Project Task summary\"\n                    onChange={this.onChange}\n                  />\n                  {/* gives feedback, which is defined in backend @NotBlank */}\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddPT.propTypes = {\n  addPT: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addPT }\n)(AddPT);\n"]},"metadata":{},"sourceType":"module"}