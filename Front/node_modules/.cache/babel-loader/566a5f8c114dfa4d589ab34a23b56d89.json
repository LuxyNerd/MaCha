{"ast":null,"code":"import _classCallCheck from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emine.turcan/Projekt/MaCha/Front/src/UploadPage.js\";\nimport React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport Drawer from 'material-ui/Drawer';\nimport MenuItem from 'material-ui/MenuItem';\nimport AppBar from 'material-ui/AppBar';\nimport FontIcon from 'material-ui/FontIcon';\nimport { blue500, red500, greenA200 } from 'material-ui/styles/colors';\nimport UploadScreen from './UploadScreen';\nimport Pastfiles from './Pastfiles';\nimport LoginScreen from './Loginscreen';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      draweropen: false,\n      currentScreen: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var currentScreen = [];\n      currentScreen.push(React.createElement(UploadScreen, {\n        appContext: this.props.appContext,\n        role: this.props.role,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n      this.setState({\n        currentScreen: currentScreen\n      });\n    }\n    /**\n     * Toggle opening and closing of drawer\n     * @param {*} event \n     */\n\n  }, {\n    key: \"toggleDrawer\",\n    value: function toggleDrawer(event) {\n      // console.log(\"drawer click\");\n      this.setState({\n        draweropen: !this.state.draweropen\n      });\n    }\n  }, {\n    key: \"handleMenuClick\",\n    value: function handleMenuClick(event, page) {\n      switch (page) {\n        case \"openprint\":\n          // console.log(\"need to open uploadapge\")\n          var currentScreen = [];\n          currentScreen.push(React.createElement(UploadScreen, {\n            appContext: this.props.appContext,\n            role: this.props.role,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }));\n          this.setState({\n            currentScreen: currentScreen\n          });\n          break;\n\n        case \"openpast\":\n          // console.log(\"need to open pastfiles\")\n          var currentScreen = [];\n          currentScreen.push(React.createElement(Pastfiles, {\n            appContext: this.props.appContext,\n            role: this.props.role,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }));\n          this.setState({\n            currentScreen: currentScreen\n          });\n          break;\n\n        case \"logout\":\n          var loginPage = [];\n          loginPage.push(React.createElement(LoginScreen, {\n            appContext: this.props.appContext,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n          this.props.appContext.setState({\n            loginPage: loginPage,\n            uploadScreen: []\n          });\n          break;\n      }\n\n      this.setState({\n        draweropen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        title: \"Printing Page\",\n        onLeftIconButtonTouchTap: function onLeftIconButtonTouchTap(event) {\n          return _this2.toggleDrawer(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        open: this.state.draweropen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"User Profile\", React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FontIcon, {\n        className: \"material-icons drawerclosebutton\",\n        color: blue500,\n        styles: {\n          top: 10\n        },\n        onClick: function onClick(event) {\n          return _this2.toggleDrawer(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"clear\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: function onClick(event) {\n          return _this2.handleMenuClick(event, \"openprint\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Printing Page\"), React.createElement(MenuItem, {\n        onClick: function onClick(event) {\n          return _this2.handleMenuClick(event, \"openpast\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Past Files\"), React.createElement(MenuItem, {\n        onClick: function onClick(event) {\n          return _this2.handleMenuClick(event, \"logout\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Logout\")))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.currentScreen));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/emine.turcan/Projekt/MaCha/Front/src/UploadPage.js"],"names":["React","Component","MuiThemeProvider","Drawer","MenuItem","AppBar","FontIcon","blue500","red500","greenA200","UploadScreen","Pastfiles","LoginScreen","App","props","state","draweropen","currentScreen","push","appContext","role","setState","event","page","loginPage","uploadScreen","toggleDrawer","top","handleMenuClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport Drawer from 'material-ui/Drawer';\nimport MenuItem from 'material-ui/MenuItem';\nimport AppBar from 'material-ui/AppBar';\nimport FontIcon from 'material-ui/FontIcon';\nimport {blue500, red500, greenA200} from 'material-ui/styles/colors';\nimport UploadScreen from './UploadScreen';\nimport Pastfiles from './Pastfiles';\nimport LoginScreen from './Loginscreen'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {draweropen: false,currentScreen:[]};\n  }\n  componentDidMount(){\n    var currentScreen=[];\n    currentScreen.push(<UploadScreen appContext={this.props.appContext} role={this.props.role}/>);\n    this.setState({currentScreen})\n  }\n  /**\n   * Toggle opening and closing of drawer\n   * @param {*} event \n   */ \n  toggleDrawer(event){\n  // console.log(\"drawer click\");\n  this.setState({draweropen: !this.state.draweropen})\n  }\n  handleMenuClick(event,page){\n    switch(page){\n      case \"openprint\":\n      // console.log(\"need to open uploadapge\")\n      var currentScreen=[];\n      currentScreen.push(<UploadScreen appContext={this.props.appContext} role={this.props.role}/>);\n      this.setState({currentScreen})\n      break;\n      case \"openpast\":\n      // console.log(\"need to open pastfiles\")\n      var currentScreen=[];\n      currentScreen.push(<Pastfiles appContext={this.props.appContext} role={this.props.role}/>);\n      this.setState({currentScreen})\n      break;\n      case \"logout\":\n      var loginPage =[];\n      loginPage.push(<LoginScreen appContext={this.props.appContext}/>);\n      this.props.appContext.setState({loginPage:loginPage,uploadScreen:[]})\n      break;\n    }\n    this.setState({draweropen:false})\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider>\n          <AppBar\n            title=\"Printing Page\"\n            onLeftIconButtonTouchTap={(event) => this.toggleDrawer(event)}\n          />\n        </MuiThemeProvider>\n        <MuiThemeProvider>\n          <Drawer open={this.state.draweropen}>\n            <MenuItem>\n              <div>\n              User Profile\n              <a href=\"#\"><FontIcon\n                className=\"material-icons drawerclosebutton\"\n                color={blue500}\n                styles={{ top:10,}}\n                onClick={(event) => this.toggleDrawer(event)}\n              >clear</FontIcon></a>\n              </div>\n            </MenuItem>\n              <div>\n              <MenuItem onClick={(event) => this.handleMenuClick(event,\"openprint\")}>\n                  Printing Page\n              </MenuItem>\n              <MenuItem onClick={(event) => this.handleMenuClick(event,\"openpast\")}>\n                  Past Files\n              </MenuItem>\n              <MenuItem onClick={(event) => this.handleMenuClick(event,\"logout\")}>\n                  Logout\n              </MenuItem>\n              </div> \n          </Drawer>\n        </MuiThemeProvider>\n        <div>\n          {this.state.currentScreen}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}