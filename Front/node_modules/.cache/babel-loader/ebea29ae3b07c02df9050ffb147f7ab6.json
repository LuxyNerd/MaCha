{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\"; //Fix bug with priority in Spring Boot Server, needs to check null first\n\nexport var addProjectTask = function addProjectTask(backlog_id, project_task, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post(\"/api/backlog/\".concat(backlog_id), project_task);\n\n              case 3:\n                history.push(\"/projectBoard/\".concat(backlog_id));\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: {}\n                });\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getBacklog = function getBacklog(backlog_id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.get(\"/api/backlog/\".concat(backlog_id));\n\n              case 3:\n                res = _context2.sent;\n                dispatch({\n                  type: GET_BACKLOG,\n                  payload: res.data\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context2.t0.response.data\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProjectTask = function getProjectTask(backlog_id, pt_id, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id));\n\n              case 3:\n                res = _context3.sent;\n                dispatch({\n                  type: GET_PROJECT_TASK,\n                  payload: res.data\n                });\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                history.push(\"/dashboard\");\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var updateProjectTask = function updateProjectTask(backlog_id, pt_id, project_task, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return axios.patch(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id), project_task);\n\n              case 3:\n                history.push(\"/projectBoard/\".concat(backlog_id));\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: {}\n                });\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context4.t0.response.data\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteProjectTask = function deleteProjectTask(backlog_id, pt_id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!window.confirm(\"You are deleting project task \".concat(pt_id, \", this action cannot be undone\"))) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                _context5.next = 3;\n                return axios.delete(\"/api/backlog/\".concat(backlog_id, \"/\").concat(pt_id));\n\n              case 3:\n                dispatch({\n                  type: DELETE_PROJECT_TASK,\n                  payload: pt_id\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/emine.turcan/Projekt/MaCha/Front/src/actions/backlogActions.js"],"names":["axios","GET_ERRORS","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","addProjectTask","backlog_id","project_task","history","dispatch","post","push","type","payload","response","data","getBacklog","get","res","getProjectTask","pt_id","updateProjectTask","patch","deleteProjectTask","window","confirm","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}