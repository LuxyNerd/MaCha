{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emine.turcan/Projekt/MaCha/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\nexport var addPT = function addPT(project_task, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.post('/api/board', project_task);\n\n              case 3:\n                res = _context.sent;\n                history.push('/ProjectBoard'); // just back on projectBoard\n\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: {}\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch({\n                  type: GET_ERRORS,\n                  payload: _context.t0.response.data\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProjects = function getProjects() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get('/api/project/all');\n\n              case 2:\n                res = _context2.sent;\n                dispatch({\n                  type: GET_PROJECTS,\n                  payload: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getProject = function getProject(id, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\"/api/project/\".concat(id));\n\n              case 3:\n                res = _context3.sent;\n                dispatch({\n                  type: GET_PROJECT,\n                  payload: res.data\n                });\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                history.push('/');\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteProject = function deleteProject(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!window.confirm('Are you sure? This will delete the project and all the data related to it')) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                _context4.next = 3;\n                return axios.delete(\"/api/project/\".concat(id));\n\n              case 3:\n                dispatch({\n                  type: DELETE_PROJECT,\n                  payload: id\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/emine.turcan/Projekt/MaCha/Front/src/actions/projectTaskActions.js"],"names":["axios","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","addPT","project_task","history","dispatch","post","res","push","type","payload","response","data","getProjects","get","getProject","id","deleteProject","window","confirm","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,cAAhD,QAAsE,SAAtE;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,YAAD,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA2B,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE1BR,KAAK,CAACS,IAAN,CAAW,YAAX,EAAyBH,YAAzB,CAF0B;;AAAA;AAEtCI,gBAAAA,GAFsC;AAG5CH,gBAAAA,OAAO,CAACI,IAAR,CAAa,eAAb,EAH4C,CAGb;;AAC/BH,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEX,UADC;AAEPY,kBAAAA,OAAO,EAAE;AAFF,iBAAD,CAAR;AAJ4C;AAAA;;AAAA;AAAA;AAAA;AAS5CL,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEX,UADC;AAEPY,kBAAAA,OAAO,EAAE,YAAMC,QAAN,CAAeC;AAFjB,iBAAD,CAAR;;AAT4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAgBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAMR,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACbR,KAAK,CAACiB,GAAN,CAAU,kBAAV,CADa;;AAAA;AACzBP,gBAAAA,GADyB;AAE/BF,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAEV,YADC;AAEPW,kBAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,iBAAD,CAAR;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAQP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKZ,OAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAiB,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAErBR,KAAK,CAACiB,GAAN,wBAA0BE,EAA1B,EAFqB;;AAAA;AAEjCT,gBAAAA,GAFiC;AAGvCF,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAET,WADC;AAEPU,kBAAAA,OAAO,EAAEH,GAAG,CAACK;AAFN,iBAAD,CAAR;AAHuC;AAAA;;AAAA;AAAA;AAAA;AAQvCR,gBAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;;AARuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAYP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAAD,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,kBAAMX,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE/Ba,MAAM,CAACC,OAAP,CACE,2EADF,CAF+B;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMzBtB,KAAK,CAACuB,MAAN,wBAA6BJ,EAA7B,EANyB;;AAAA;AAO/BX,gBAAAA,QAAQ,CAAC;AACPI,kBAAAA,IAAI,EAAER,cADC;AAEPS,kBAAAA,OAAO,EAAEM;AAFF,iBAAD,CAAR;;AAP+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\n\nexport const addPT = (project_task, history) => async dispatch => {\n  try {\n    const res = await axios.post('/api/board', project_task);\n    history.push('/ProjectBoard'); // just back on projectBoard\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get('/api/project/all');\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push('/');\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      'Are you sure? This will delete the project and all the data related to it'\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}